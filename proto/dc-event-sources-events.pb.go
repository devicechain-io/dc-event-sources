// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: proto/dc-event-sources-events.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//*
// Unresolved event that has been decoded by
// an event source.
type PUnresolvedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId      string  `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	AltId         *string `protobuf:"bytes,2,opt,name=alt_id,json=altId,proto3,oneof" json:"alt_id,omitempty"`
	Device        string  `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	Relationship  *string `protobuf:"bytes,4,opt,name=relationship,proto3,oneof" json:"relationship,omitempty"`
	OccurredTime  string  `protobuf:"bytes,5,opt,name=occurred_time,json=occurredTime,proto3" json:"occurred_time,omitempty"`
	ProcessedTime string  `protobuf:"bytes,6,opt,name=processed_time,json=processedTime,proto3" json:"processed_time,omitempty"`
	EventType     int64   `protobuf:"varint,7,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Payload       []byte  `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *PUnresolvedEvent) Reset() {
	*x = PUnresolvedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dc_event_sources_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PUnresolvedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PUnresolvedEvent) ProtoMessage() {}

func (x *PUnresolvedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dc_event_sources_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PUnresolvedEvent.ProtoReflect.Descriptor instead.
func (*PUnresolvedEvent) Descriptor() ([]byte, []int) {
	return file_proto_dc_event_sources_events_proto_rawDescGZIP(), []int{0}
}

func (x *PUnresolvedEvent) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *PUnresolvedEvent) GetAltId() string {
	if x != nil && x.AltId != nil {
		return *x.AltId
	}
	return ""
}

func (x *PUnresolvedEvent) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *PUnresolvedEvent) GetRelationship() string {
	if x != nil && x.Relationship != nil {
		return *x.Relationship
	}
	return ""
}

func (x *PUnresolvedEvent) GetOccurredTime() string {
	if x != nil {
		return x.OccurredTime
	}
	return ""
}

func (x *PUnresolvedEvent) GetProcessedTime() string {
	if x != nil {
		return x.ProcessedTime
	}
	return ""
}

func (x *PUnresolvedEvent) GetEventType() int64 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *PUnresolvedEvent) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

//*
// Payload for creating a new device relationship.
type PUnresolvedNewRelationshipPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceRelationshipType string  `protobuf:"bytes,1,opt,name=device_relationship_type,json=deviceRelationshipType,proto3" json:"device_relationship_type,omitempty"`
	TargetDevice           *string `protobuf:"bytes,2,opt,name=target_device,json=targetDevice,proto3,oneof" json:"target_device,omitempty"`
	TargetDeviceGroup      *string `protobuf:"bytes,3,opt,name=target_device_group,json=targetDeviceGroup,proto3,oneof" json:"target_device_group,omitempty"`
	TargetAsset            *string `protobuf:"bytes,4,opt,name=target_asset,json=targetAsset,proto3,oneof" json:"target_asset,omitempty"`
	TargetAssetGroup       *string `protobuf:"bytes,5,opt,name=target_asset_group,json=targetAssetGroup,proto3,oneof" json:"target_asset_group,omitempty"`
	TargetCustomer         *string `protobuf:"bytes,6,opt,name=target_customer,json=targetCustomer,proto3,oneof" json:"target_customer,omitempty"`
	TargetCustomerGroup    *string `protobuf:"bytes,7,opt,name=target_customer_group,json=targetCustomerGroup,proto3,oneof" json:"target_customer_group,omitempty"`
	TargetArea             *string `protobuf:"bytes,8,opt,name=target_area,json=targetArea,proto3,oneof" json:"target_area,omitempty"`
	TargetAreaGroup        *string `protobuf:"bytes,9,opt,name=target_area_group,json=targetAreaGroup,proto3,oneof" json:"target_area_group,omitempty"`
}

func (x *PUnresolvedNewRelationshipPayload) Reset() {
	*x = PUnresolvedNewRelationshipPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dc_event_sources_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PUnresolvedNewRelationshipPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PUnresolvedNewRelationshipPayload) ProtoMessage() {}

func (x *PUnresolvedNewRelationshipPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dc_event_sources_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PUnresolvedNewRelationshipPayload.ProtoReflect.Descriptor instead.
func (*PUnresolvedNewRelationshipPayload) Descriptor() ([]byte, []int) {
	return file_proto_dc_event_sources_events_proto_rawDescGZIP(), []int{1}
}

func (x *PUnresolvedNewRelationshipPayload) GetDeviceRelationshipType() string {
	if x != nil {
		return x.DeviceRelationshipType
	}
	return ""
}

func (x *PUnresolvedNewRelationshipPayload) GetTargetDevice() string {
	if x != nil && x.TargetDevice != nil {
		return *x.TargetDevice
	}
	return ""
}

func (x *PUnresolvedNewRelationshipPayload) GetTargetDeviceGroup() string {
	if x != nil && x.TargetDeviceGroup != nil {
		return *x.TargetDeviceGroup
	}
	return ""
}

func (x *PUnresolvedNewRelationshipPayload) GetTargetAsset() string {
	if x != nil && x.TargetAsset != nil {
		return *x.TargetAsset
	}
	return ""
}

func (x *PUnresolvedNewRelationshipPayload) GetTargetAssetGroup() string {
	if x != nil && x.TargetAssetGroup != nil {
		return *x.TargetAssetGroup
	}
	return ""
}

func (x *PUnresolvedNewRelationshipPayload) GetTargetCustomer() string {
	if x != nil && x.TargetCustomer != nil {
		return *x.TargetCustomer
	}
	return ""
}

func (x *PUnresolvedNewRelationshipPayload) GetTargetCustomerGroup() string {
	if x != nil && x.TargetCustomerGroup != nil {
		return *x.TargetCustomerGroup
	}
	return ""
}

func (x *PUnresolvedNewRelationshipPayload) GetTargetArea() string {
	if x != nil && x.TargetArea != nil {
		return *x.TargetArea
	}
	return ""
}

func (x *PUnresolvedNewRelationshipPayload) GetTargetAreaGroup() string {
	if x != nil && x.TargetAreaGroup != nil {
		return *x.TargetAreaGroup
	}
	return ""
}

//*
// Single location entry for a location payload.
type PUnresolvedLocationEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude     *string `protobuf:"bytes,1,opt,name=latitude,proto3,oneof" json:"latitude,omitempty"`
	Longitude    *string `protobuf:"bytes,2,opt,name=longitude,proto3,oneof" json:"longitude,omitempty"`
	Elevation    *string `protobuf:"bytes,3,opt,name=elevation,proto3,oneof" json:"elevation,omitempty"`
	OccurredTime *string `protobuf:"bytes,4,opt,name=occurred_time,json=occurredTime,proto3,oneof" json:"occurred_time,omitempty"`
}

func (x *PUnresolvedLocationEntry) Reset() {
	*x = PUnresolvedLocationEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dc_event_sources_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PUnresolvedLocationEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PUnresolvedLocationEntry) ProtoMessage() {}

func (x *PUnresolvedLocationEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dc_event_sources_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PUnresolvedLocationEntry.ProtoReflect.Descriptor instead.
func (*PUnresolvedLocationEntry) Descriptor() ([]byte, []int) {
	return file_proto_dc_event_sources_events_proto_rawDescGZIP(), []int{2}
}

func (x *PUnresolvedLocationEntry) GetLatitude() string {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return ""
}

func (x *PUnresolvedLocationEntry) GetLongitude() string {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return ""
}

func (x *PUnresolvedLocationEntry) GetElevation() string {
	if x != nil && x.Elevation != nil {
		return *x.Elevation
	}
	return ""
}

func (x *PUnresolvedLocationEntry) GetOccurredTime() string {
	if x != nil && x.OccurredTime != nil {
		return *x.OccurredTime
	}
	return ""
}

//*
// Payload for a location event.
type PUnresolvedLocationsPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*PUnresolvedLocationEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *PUnresolvedLocationsPayload) Reset() {
	*x = PUnresolvedLocationsPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dc_event_sources_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PUnresolvedLocationsPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PUnresolvedLocationsPayload) ProtoMessage() {}

func (x *PUnresolvedLocationsPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dc_event_sources_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PUnresolvedLocationsPayload.ProtoReflect.Descriptor instead.
func (*PUnresolvedLocationsPayload) Descriptor() ([]byte, []int) {
	return file_proto_dc_event_sources_events_proto_rawDescGZIP(), []int{3}
}

func (x *PUnresolvedLocationsPayload) GetEntries() []*PUnresolvedLocationEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

//*
// Single measurement entry for a measurement payload.
type PUnresolvedMeasurementsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measurements map[string]string `protobuf:"bytes,1,rep,name=measurements,proto3" json:"measurements,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OccurredTime *string           `protobuf:"bytes,2,opt,name=occurred_time,json=occurredTime,proto3,oneof" json:"occurred_time,omitempty"`
}

func (x *PUnresolvedMeasurementsEntry) Reset() {
	*x = PUnresolvedMeasurementsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dc_event_sources_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PUnresolvedMeasurementsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PUnresolvedMeasurementsEntry) ProtoMessage() {}

func (x *PUnresolvedMeasurementsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dc_event_sources_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PUnresolvedMeasurementsEntry.ProtoReflect.Descriptor instead.
func (*PUnresolvedMeasurementsEntry) Descriptor() ([]byte, []int) {
	return file_proto_dc_event_sources_events_proto_rawDescGZIP(), []int{4}
}

func (x *PUnresolvedMeasurementsEntry) GetMeasurements() map[string]string {
	if x != nil {
		return x.Measurements
	}
	return nil
}

func (x *PUnresolvedMeasurementsEntry) GetOccurredTime() string {
	if x != nil && x.OccurredTime != nil {
		return *x.OccurredTime
	}
	return ""
}

//*
// Payload for a measurement event.
type PUnresolvedMeasurementsPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*PUnresolvedMeasurementsEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *PUnresolvedMeasurementsPayload) Reset() {
	*x = PUnresolvedMeasurementsPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dc_event_sources_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PUnresolvedMeasurementsPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PUnresolvedMeasurementsPayload) ProtoMessage() {}

func (x *PUnresolvedMeasurementsPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dc_event_sources_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PUnresolvedMeasurementsPayload.ProtoReflect.Descriptor instead.
func (*PUnresolvedMeasurementsPayload) Descriptor() ([]byte, []int) {
	return file_proto_dc_event_sources_events_proto_rawDescGZIP(), []int{5}
}

func (x *PUnresolvedMeasurementsPayload) GetEntries() []*PUnresolvedMeasurementsEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

//*
// Single alert entry for an alerts payload.
type PUnresolvedAlertEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Level        uint32  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Message      string  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Source       string  `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	OccurredTime *string `protobuf:"bytes,5,opt,name=occurred_time,json=occurredTime,proto3,oneof" json:"occurred_time,omitempty"`
}

func (x *PUnresolvedAlertEntry) Reset() {
	*x = PUnresolvedAlertEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dc_event_sources_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PUnresolvedAlertEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PUnresolvedAlertEntry) ProtoMessage() {}

func (x *PUnresolvedAlertEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dc_event_sources_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PUnresolvedAlertEntry.ProtoReflect.Descriptor instead.
func (*PUnresolvedAlertEntry) Descriptor() ([]byte, []int) {
	return file_proto_dc_event_sources_events_proto_rawDescGZIP(), []int{6}
}

func (x *PUnresolvedAlertEntry) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PUnresolvedAlertEntry) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PUnresolvedAlertEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PUnresolvedAlertEntry) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *PUnresolvedAlertEntry) GetOccurredTime() string {
	if x != nil && x.OccurredTime != nil {
		return *x.OccurredTime
	}
	return ""
}

//*
// Payload for an alert event.
type PUnresolvedAlertsPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*PUnresolvedAlertEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *PUnresolvedAlertsPayload) Reset() {
	*x = PUnresolvedAlertsPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dc_event_sources_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PUnresolvedAlertsPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PUnresolvedAlertsPayload) ProtoMessage() {}

func (x *PUnresolvedAlertsPayload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dc_event_sources_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PUnresolvedAlertsPayload.ProtoReflect.Descriptor instead.
func (*PUnresolvedAlertsPayload) Descriptor() ([]byte, []int) {
	return file_proto_dc_event_sources_events_proto_rawDescGZIP(), []int{7}
}

func (x *PUnresolvedAlertsPayload) GetEntries() []*PUnresolvedAlertEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

var File_proto_dc_event_sources_events_proto protoreflect.FileDescriptor

var file_proto_dc_event_sources_events_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x63, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x69, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x22, 0xad, 0x02, 0x0a, 0x10, 0x50, 0x55, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x06, 0x61, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x61, 0x6c, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x6c, 0x74, 0x5f, 0x69,
	0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x22, 0xfb, 0x04, 0x0a, 0x21, 0x50, 0x55, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x64, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x11, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x13, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x72,
	0x65, 0x61, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x16, 0x0a, 0x14,
	0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x42, 0x18, 0x0a, 0x16, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x22, 0xe6, 0x01, 0x0a, 0x18, 0x50, 0x55, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x6f,
	0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x6c,
	0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x63, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x6e, 0x0a, 0x1b, 0x50, 0x55, 0x6e,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4f, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x69, 0x6f, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x55, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x8c, 0x02, 0x0a, 0x1c, 0x50, 0x55,
	0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x6f, 0x0a, 0x0c, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4b, 0x2e, 0x69, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x55, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0d, 0x6f,
	0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x1e, 0x50, 0x55, 0x6e, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x53, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x69, 0x6f,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x55, 0x6e, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22,
	0xaf, 0x01, 0x0a, 0x15, 0x50, 0x55, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0d, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c,
	0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x68, 0x0a, 0x18, 0x50, 0x55, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4c, 0x0a,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x69, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x55, 0x6e,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x08, 0x5a, 0x06, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dc_event_sources_events_proto_rawDescOnce sync.Once
	file_proto_dc_event_sources_events_proto_rawDescData = file_proto_dc_event_sources_events_proto_rawDesc
)

func file_proto_dc_event_sources_events_proto_rawDescGZIP() []byte {
	file_proto_dc_event_sources_events_proto_rawDescOnce.Do(func() {
		file_proto_dc_event_sources_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dc_event_sources_events_proto_rawDescData)
	})
	return file_proto_dc_event_sources_events_proto_rawDescData
}

var file_proto_dc_event_sources_events_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_dc_event_sources_events_proto_goTypes = []interface{}{
	(*PUnresolvedEvent)(nil),                  // 0: io.devicechain.eventsources.PUnresolvedEvent
	(*PUnresolvedNewRelationshipPayload)(nil), // 1: io.devicechain.eventsources.PUnresolvedNewRelationshipPayload
	(*PUnresolvedLocationEntry)(nil),          // 2: io.devicechain.eventsources.PUnresolvedLocationEntry
	(*PUnresolvedLocationsPayload)(nil),       // 3: io.devicechain.eventsources.PUnresolvedLocationsPayload
	(*PUnresolvedMeasurementsEntry)(nil),      // 4: io.devicechain.eventsources.PUnresolvedMeasurementsEntry
	(*PUnresolvedMeasurementsPayload)(nil),    // 5: io.devicechain.eventsources.PUnresolvedMeasurementsPayload
	(*PUnresolvedAlertEntry)(nil),             // 6: io.devicechain.eventsources.PUnresolvedAlertEntry
	(*PUnresolvedAlertsPayload)(nil),          // 7: io.devicechain.eventsources.PUnresolvedAlertsPayload
	nil,                                       // 8: io.devicechain.eventsources.PUnresolvedMeasurementsEntry.MeasurementsEntry
}
var file_proto_dc_event_sources_events_proto_depIdxs = []int32{
	2, // 0: io.devicechain.eventsources.PUnresolvedLocationsPayload.entries:type_name -> io.devicechain.eventsources.PUnresolvedLocationEntry
	8, // 1: io.devicechain.eventsources.PUnresolvedMeasurementsEntry.measurements:type_name -> io.devicechain.eventsources.PUnresolvedMeasurementsEntry.MeasurementsEntry
	4, // 2: io.devicechain.eventsources.PUnresolvedMeasurementsPayload.entries:type_name -> io.devicechain.eventsources.PUnresolvedMeasurementsEntry
	6, // 3: io.devicechain.eventsources.PUnresolvedAlertsPayload.entries:type_name -> io.devicechain.eventsources.PUnresolvedAlertEntry
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_dc_event_sources_events_proto_init() }
func file_proto_dc_event_sources_events_proto_init() {
	if File_proto_dc_event_sources_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dc_event_sources_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PUnresolvedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dc_event_sources_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PUnresolvedNewRelationshipPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dc_event_sources_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PUnresolvedLocationEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dc_event_sources_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PUnresolvedLocationsPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dc_event_sources_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PUnresolvedMeasurementsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dc_event_sources_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PUnresolvedMeasurementsPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dc_event_sources_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PUnresolvedAlertEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dc_event_sources_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PUnresolvedAlertsPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_dc_event_sources_events_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_proto_dc_event_sources_events_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_proto_dc_event_sources_events_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_proto_dc_event_sources_events_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_proto_dc_event_sources_events_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dc_event_sources_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_dc_event_sources_events_proto_goTypes,
		DependencyIndexes: file_proto_dc_event_sources_events_proto_depIdxs,
		MessageInfos:      file_proto_dc_event_sources_events_proto_msgTypes,
	}.Build()
	File_proto_dc_event_sources_events_proto = out.File
	file_proto_dc_event_sources_events_proto_rawDesc = nil
	file_proto_dc_event_sources_events_proto_goTypes = nil
	file_proto_dc_event_sources_events_proto_depIdxs = nil
}
